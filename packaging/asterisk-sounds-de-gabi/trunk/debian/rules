#!/usr/bin/make -f
# -*- makefile -*-
# Sample debian/rules that uses debhelper.
#
# This file was originally written by Joey Hess and Craig Small.
# As a special exception, when this file is copied by dh-make into a
# dh-make output file, you may use that output file without restriction.
# This special exception was added by Craig Small in version 0.37 of dh-make.

# Uncomment this to turn on verbose mode.
#export DH_VERBOSE=1

# This has to be exported to make some magic below work.
export DH_OPTIONS



PACKAGE_NAME := $(shell head debian/control \
	| grep '^Source:' | sed -e 's/^Source:\s*//' | head -n 1)

DEB_VERSION := $(shell head -n 1 debian/changelog \
	| sed -e 's/^[^(]*(\([^)]*\)).*/\1/')

UPSTREAM_VERSION := $(shell echo $(DEB_VERSION) \
	| sed -e 's/^.*://' -e 's/-[^\-]*$$//' -e 's/.dfsg$$//')

REPACKED_UPSTREAM_TAR := $(PACKAGE_NAME)_$(UPSTREAM_VERSION).orig.tar.gz

#UPSTREAM_URL := http://www.amooma.de/download/paketname/releases/paketname-$(UPSTREAM_VERSION).tar.gz
UPSTREAM_SVN := https://svn.amooma.com/asterisk-sounds-de/tags/$(UPSTREAM_VERSION)


print-version:
	@echo "      Package name:   $(PACKAGE_NAME)"
	@echo "    Debian version:   $(DEB_VERSION)"
	@echo "  Upstream version:   $(UPSTREAM_VERSION)"


get-orig-source: get-orig-source-stamp
get-orig-source-stamp:
	dh_testdir
	#[ -d ../tarballs/. ] || mkdir -p ../tarballs
	# get source
	## do not put passwords etc. in here!
	#svn export --no-auth-cache --non-interactive --force \
	#	$(UPSTREAM_SVN) ../tarballs/$(PACKAGE_NAME)-$(UPSTREAM_VERSION)
	cp ../tarballs/asterisk-sounds-de-gabi-$(UPSTREAM_VERSION).tar.gz \
		../tarballs/$(PACKAGE_NAME)_$(UPSTREAM_VERSION).orig.tar.gz
	## repack tar
	#cd ../tarballs/ \
	#&& tar -czf $(REPACKED_UPSTREAM_TAR) $(PACKAGE_NAME)-$(UPSTREAM_VERSION)
	#rm -rf $(PACKAGE_NAME)-$(UPSTREAM_VERSION)
	touch get-orig-source-stamp




configure: get-orig-source-stamp configure-stamp
configure-stamp:
	dh_testdir
	# Add here commands to configure the package.
	
	touch configure-stamp


build: get-orig-source-stamp build-stamp
build-stamp: configure-stamp
	dh_testdir
	
	# Add here commands to compile the package.
	#$(MAKE)
	$(MAKE) alaw
	
	#docbook-to-man debian/asterisk-sounds-de-gabi.sgml > asterisk-sounds-de-gabi.1
	
	touch $@

clean: 
	dh_testdir
	dh_testroot
	rm -f build-stamp
	rm -f configure-stamp
	
	# Add here commands to clean up after the build process.
	$(MAKE) clean

	dh_clean

distclean: clean
	rm -f get-orig-source-stamp


install: build
	dh_testdir
	dh_testroot
	dh_clean -k 
	dh_installdirs
	
	# Add here commands to install the package into debian/asterisk-sounds-de-gabi.
	@[ ! -z $(CURDIR) ]
	#$(MAKE) DESTDIR=$(CURDIR)/debian/asterisk-sounds-de-gabi install
	cd $(CURDIR)/debian/$(PACKAGE_NAME)/usr/share/asterisk/sounds/de \
	&& mkdir -p digits dictate phonetic letters
	cp -d *.alaw          $(CURDIR)/debian/$(PACKAGE_NAME)/usr/share/asterisk/sounds/de/
	cp -d digits/*.alaw   $(CURDIR)/debian/$(PACKAGE_NAME)/usr/share/asterisk/sounds/de/digits/
	cp -d dictate/*.alaw  $(CURDIR)/debian/$(PACKAGE_NAME)/usr/share/asterisk/sounds/de/dictate/
	cp -d phonetic/*.alaw $(CURDIR)/debian/$(PACKAGE_NAME)/usr/share/asterisk/sounds/de/phonetic/
	cp -d letters/*.alaw  $(CURDIR)/debian/$(PACKAGE_NAME)/usr/share/asterisk/sounds/de/letters/
	
	dh_fixperms
	


# Build architecture-independent files here.
binary-indep: build install
	dh_testdir
	dh_testroot
	dh_installchangelogs 
	dh_installdocs
	dh_installexamples
	#dh_install
	#dh_installmenu
	#dh_installdebconf	
	#dh_installlogrotate
	#dh_installemacsen
	#dh_installpam
	#dh_installmime
	#dh_python
	#dh_installinit
	#dh_installcron
	#dh_installinfo
	dh_installman
	dh_link
	dh_strip
	dh_compress
	dh_fixperms
	#dh_perl
	#dh_makeshlibs
	dh_installdeb
	dh_shlibdeps
	dh_gencontrol
	dh_md5sums
	dh_builddeb

# Build architecture-dependent files here.
binary-arch: build install
	# Nothing to do. No compiling involved.


binary: binary-indep binary-arch
.PHONY: build clean binary-indep binary-arch binary install configure print-version get-orig-source distclean

